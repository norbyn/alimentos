<?php

/**
 * ProductoFuentes
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class ProductoFuentesTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return ProductoFuentesTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('ProductoFuentes');
    }

    public function findAllWithProductoFuente($start, $limit, $mes, $year) {
        if (!$year || $year === '%') {
            $year = date("Y");
        }
        $mes = '%';
        $time = $year . '-' . $mes . '%';
        return $this->createQuery('producto_fuentes')
                        ->innerJoin('producto_fuentes.Producto pro')
                        ->innerJoin('pro.Proveedor prov')
                        ->innerJoin('producto_fuentes.Fuente fue')
                        ->where('producto_fuentes.fecha like "' . $time . '"')
                        ->orderBy('prov.id, producto_fuentes.id ' . " LIMIT " . $start . ", " . $limit)
                        ->fetchArray();
    }

    public function productos($time) {
        return Doctrine_Query::create()->select('pf.id, producto.id as producto_id, producto.nombre '
                                . 'as nombre_producto, proveedor.nombre as nombre_proveedor')
                        ->from('ProductoFuentes pf')
                        ->innerJoin('pf.Producto producto')
                        ->innerJoin('producto.Proveedor proveedor')
                        ->where('pf.fecha like "' . $time . '"')
                        ->groupBy('producto.id')
                        ->orderBy('proveedor.nombre, producto.nombre')->execute()->toArray(true);
    }

    public function cantidad($time, $producto_id, $fuente_id) {
        return Doctrine_Query::create()->select('pf.cant as cantidad')
                        ->from('ProductoFuentes pf')
                        ->where('pf.fecha like "' . $time . '"')
                        ->andWhere('pf.producto_id = ?', $producto_id)
                        ->andWhere('pf.fuentes_id = ?', $fuente_id)
                        ->execute()->toArray(true);
    }

    public function proveedores_fuentes2($time) {
        return Doctrine_Query::create()
                        ->select('producto.id, proveedor.nombre as nombre, pf.id')
                        ->from('ProductoFuentes pf')->innerJoin('pf.Producto producto')
                        ->innerJoin('producto.Proveedor proveedor')
                        ->where('pf.fecha like "' . $time . '"')
                        ->groupBy('producto.id')
                        ->orderBy('proveedor.nombre, producto.nombre')
                        ->execute()->toArray(true);
    }

    public function proveedores_fuentes($time) {
        return Doctrine_Query::create()
                        ->select('producto.id, proveedor.nombre as nombre, pf.id')
                        ->from('ProductoFuentes pf')->innerJoin('pf.Producto producto')
                        ->innerJoin('producto.Proveedor proveedor')
                        ->where('pf.fecha like "' . $time . '"')
                        ->groupBy('proveedor.id')
                        ->orderBy('proveedor.nombre, producto.nombre')
                        ->execute()->toArray(true);
    }

    public function nominalizados($time, $producto_id) {
        $query = Doctrine_Query::create()->select('sum(org.ctd) as cantidad')
                ->from('OrgNominalizado org')
                ->where('org.fecha like "' . $time . '"')
                ->andWhere('org.producto_id = ?', $producto_id);
        return $query->execute()->toArray(true);
    }

    public function consumo_intermedio($time, $producto_id) {
        return Doctrine_Query::create()->select('sum(consumo_inter.cant) as cantidad')
                        ->from('ConsumoInter consumo_inter')
                        ->where('consumo_inter.fecha like "' . $time . '"')
                        ->andWhere('consumo_inter.producto_id = ?', $producto_id)
                        ->execute()->toArray(true);
    }

}
