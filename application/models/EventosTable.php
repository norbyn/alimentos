<?php

/**
 * Eventos
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class EventosTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return EventosTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('Eventos');
    }

    public function findAllWithEntidadProducto($mes, $year) {
        if (!$year || $year === '%') {
            $year = date("Y");
        }
        if (!$mes || $mes === '%') {
            $mes = date("m");
        }
        $temp = $year . '-' . $mes . '%';
        return $this->createQuery('eventos')
                        ->select('eventos.*, pro.nombre as producto_nombre'
                                . ',ent.nombre as entidad_nombre')
                        ->innerJoin('eventos.Producto pro')
                        ->innerJoin('eventos.Entidad ent')
                        ->where('eventos.fecha like "' . $temp . '"')
                        ->fetchArray();
    }

    public function eventos($time, $entidad_id) {
        return $this->createQuery('eventos')
                        ->select('eventos.id, eventos.concepto as concepto, eventos.cant as cantidad, pro.nombre as producto_nombre'
                                . ',ent.nombre as entidad_nombre')
                        ->innerJoin('eventos.Producto pro')
                        ->innerJoin('eventos.Entidad ent')
                        ->where('eventos.fecha like "' . $time . '"')
                        ->andWhere('ent.id = ?', $entidad_id)
                        ->fetchArray();
    }

    public function eventos_por_producto($time, $entidad_id, $producto_id) {
        return $this->createQuery('eventos')
                        ->select('eventos.id, eventos.concepto as concepto, eventos.cant as cantidad, pro.nombre as producto_nombre'
                                . ',ent.nombre as entidad_nombre')
                        ->innerJoin('eventos.Producto pro')
                        ->innerJoin('eventos.Entidad ent')
                        ->where('eventos.fecha like "' . $time . '"')
                        ->andWhere('ent.id = ?', $entidad_id)
                        ->andWhere('pro.id = ?', $producto_id)
                        ->fetchArray();
    }

}
