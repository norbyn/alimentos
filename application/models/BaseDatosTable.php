<?php

/**
 * BaseDatosTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class BaseDatosTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return BaseDatosTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('BaseDatos');
    }

    public function getStore($balance_alim_id) {
        return $this->createQuery('base_datos')
                        ->innerJoin('base_datos.Producto pro')
                        ->innerJoin('base_datos.BalanceAlim ba')
                        ->where('base_datos.balance_alim_id = ?', $balance_alim_id)
                        ->fetchArray();
    }

    public function all() {
        return $this->createQuery('base_datos')
                        ->innerJoin('base_datos.Producto pro')
                        ->innerJoin('base_datos.BalanceAlim ba')
                        ->fetchArray();
    }

    public function eventos($time, $entidad_id, $producto_id) {
        return $this->createQuery('base_datos')
                        ->select('base_datos.id, pro.id, ba.id, ba.almuerzo_evt*pro.norma as almuerzo, '
                                . 'ba.merienda_evt*pro.norma as merienda, ba.comida_evt*pro.norma as comida'
                                . ',comedor.id, ent.id,nc.id as tipo_comedor_id, nc.nombre as comedor_nombre')
                        ->innerJoin('base_datos.Producto pro')
                        ->innerJoin('base_datos.BalanceAlim ba')
                        ->innerJoin('ba.Comedor comedor')
                        ->innerJoin('comedor.Entidad ent')
                        ->innerJoin('comedor.TipoComedor nc')
                        ->where('ba.created_at like "' . $time . '"')
                        ->andWhere('nc.is_evento = ?', 1)
                        ->andWhere('ent.id = ?', $entidad_id)
                        ->andWhere('pro.id = ?', $producto_id)
                        //->groupBy('tipo_comedor_id')
                        ->fetchArray();
    }
    
    public function valor_producto_mes($balance_id, $producto_id) {
        $time = date("Y") . '%';
        return $this->createQuery('base_datos')
                        ->select('base_datos.*,ba.nivel_act*ba.indice_comensal*producto.norma/tipocomedor.periodo as valor_mes, '
                                . 'base_datos.ajuste as ajuste_mes')
                        ->innerJoin('base_datos.BalanceAlim ba')
                        ->innerJoin('ba.Comedor comedor')
                        ->innerJoin('comedor.TipoComedor tipocomedor')
                        ->innerJoin('base_datos.Producto producto')
                        ->where('ba.id like ?', $balance_id)
                        ->andWhere('producto.id like ?', $producto_id)
                        ->andWhere('base_datos.created_at like ?', $time)
                        ->execute()->toArray(true);
    }

}
