<?php

/**
 * NomProducto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class NomProductoTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return NomProductoTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('NomProducto');
    }

    public function findAllWithUmProveedor($start, $limit) {
        return $this->createQuery('producto')
                        ->innerJoin('producto.Um um')
                        ->innerJoin('producto.Proveedor pro')
                        ->orderBy('pro.nombre, producto.id ' . " LIMIT " . $start . ", " . $limit)
                        ->fetchArray();
    }

    public function findByProveedorId($proveedor_id, $entidad_id) {
        $temp = date("Y-m") . '%';
        return $this->createQuery('producto')
                        ->innerJoin('producto.Um um')
                        ->innerJoin('producto.Proveedor pro')
                        ->where('producto.proveedor_id = ?', $proveedor_id)
                        ->andWhere('producto.id not in '
                                . '(select producto_id from Inventario '
                                . 'where entidad_id = ? and fecha like "' . $temp . '" )', $entidad_id)
                        ->fetchArray();
    }

    public function findByProveedorId_ConsumoInter($proveedor_id, $entidad_id) {
        $temp = date("Y-m") . '%';
        return $this->createQuery('producto')
                        ->innerJoin('producto.Um um')
                        ->innerJoin('producto.Proveedor pro')
                        ->where('producto.proveedor_id = ?', $proveedor_id)
                        ->andWhere('producto.id not in '
                                . '(select producto_id from consumo_inter '
                                . 'where entidad_id = ? and fecha like "' . $temp . '" )', $entidad_id)
                        ->fetchArray();
    }

    public function findByProveedorId2($proveedor_id) {
        return $this->createQuery('producto')
                        ->innerJoin('producto.Um um')
                        ->innerJoin('producto.Proveedor pro')
                        ->where('producto.proveedor_id = ?', $proveedor_id)
                        ->fetchArray();
    }

    public function findByProveedorId_Boleta($proveedor_id, $boleta_id) {
        return $this->createQuery('producto')
                        ->innerJoin('producto.Proveedor pro')
                        ->where('producto.proveedor_id = ?', $proveedor_id)
                        ->andWhere('producto.id not in '
                                . '(select producto_id from boleta_producto '
                                . ' where boleta_id = ?)', $boleta_id)
                        ->fetchArray();
    }

    public function findByProveedorId_BD($proveedor_id, $bd_id) {
        return $this->createQuery('producto')
                        ->innerJoin('producto.Proveedor pro')
                        ->where('producto.proveedor_id = ?', $proveedor_id)
                        ->andWhere('producto.id not in '
                                . '(select producto_id from base_datos '
                                . ' where balance_alim_id = ?)', $bd_id)
                        ->fetchArray();
    }

    public function findAllByProveedorId($proveedor_id) {
        return $this->createQuery('producto')
                        ->innerJoin('producto.Proveedor pro')
                        ->where('producto.proveedor_id = ?', $proveedor_id)
                        ->fetchArray();
    }

    public function findNominalizadoByProveedorId($proveedor_id, $entidad_id) {
        $temp = date("Y-m") . '%';
        return $this->createQuery('producto')
                        ->innerJoin('producto.Um um')
                        ->innerJoin('producto.Proveedor pro')
                        ->where('producto.proveedor_id = ?', $proveedor_id)
                        ->andWhere('producto.id not in '
                                . '(select producto_id from org_nominalizado '
                                . 'where entidad_id = ? and fecha like "' . $temp . '" )', $entidad_id)
                        ->fetchArray();
    }

}
